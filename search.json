[{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Malone Disturbance Ecology Lab Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/articles/my-vignette.html","id":"intro","dir":"Articles","previous_headings":"","what":"Intro","title":"my-vignette","text":"Explain ERA5Flux purpose, ERA5 AmeriFlux, package useful, main purpose etc. use core functions ERA5Flux entire workflow.","code":""},{"path":[]},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/articles/my-vignette.html","id":"step-0-get-ameriflux-data-and-site-metadata","dir":"Articles","previous_headings":"Workflow","what":"Step 0: Get AmeriFlux data and site metadata","title":"my-vignette","text":"First need download AmeriFlux data. Navigate AmeriFlux login account. ’re logged , can download data Download page. presented options types data products like download. Select AmeriFlux BASE select CC--4.0 data use policy follow. next step, pick sites like, write short description intended use data agree license. Finally, presented data download page download links requested sites. Click download links get zip file site. also need click “Requested_Files” download link get metadata text file request. download “requested_files_manifest_YYYYMMDD.txt”. ’ve downloaded everything, unzip site zip files. ensure rest workflow runs smoothly, recommend arrange files like : arranging files, can now generate AmeriFlux site metadata. metadata dataframe 5 columns: site_codes, lat, lon, startdate, enddate, variables. need metadata order build ERA5 data requests.","code":"your-working-directory/ ├── unzipped_data/           │   ├── unzipped_site1_folder/   │   │   ├── *.csv │   │   └── *.xlsx │   │ │   ├── unzipped_site2_folder/ │   │   ├── *.csv │   │   └── *.xlsx │   │ │   ├── unzipped_site3_folder/ │   │   ├── *.csv │   │   └── *.xlsx │   │ │   └── requested_files_manifest_YYYYMMDD.txt │ ├── site1_data.zip   ├── site2_data.zip  ├── site3_data.zip  │ └── more stuff/                    ├── ...        └── ... # Load the package library(ERA5Flux)  # Specify the ERA5 variables you want to get my_variables <- c(\"total_precipitation\")  # Point to the folder containing the unzipped site folders and requested files manifest my_folder <- system.file(\"extdata\", \"unzipped_data\", package = \"ERA5Flux\")  # Generate the AmeriFlux site metadata file my_site_metadata <- get_site_metadata(folder = my_folder,                                       selected_variables = my_variables) #> selected variables: total_precipitation #> Now checking: US-GL2 #> Rows: 7248 Columns: 1 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> dbl (1): TIMESTAMP_START #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.  my_site_metadata #>   site_codes     lat      lon   startdate      enddate           variables #> 1     US-GL2 46.7167 -87.4000 2.02501e+11 202505312330 total_precipitation"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/articles/my-vignette.html","id":"step-1-download-era5-data","dir":"Articles","previous_headings":"Workflow","what":"Step 1: Download ERA5 Data","title":"my-vignette","text":"get AmeriFlux site metadata, can now go ahead download ERA5 data. , steps need . First, make sure create account Climate Data Store haven’t done already. may need accept data license agreement first can download data. Visit Copernicus Climate Data Store User Profile page accept appropriate license(s). , download_ERA5() requires land-sea mask must download first get_land_sea_mask(). function download land-sea mask Now ready download ERA5 data. Copy paste Climate Data Store API token my_token argument. Provide AmeriFlux site metadata site_metadata, set file path land-sea mask well. Finally, specify folder path want download ERA5 data .","code":"# Download the land-sea mask if you haven't done so already get_land_sea_mask() # Paste your token  my_token <- \"my_ECMWF_token\"  # Set the path to your land-sea mask path_to_mask <- \"lsm_1279l4_0.1x0.1.grb_v4_unpack.nc\"  # Point to the folder where you want the ERA5 data to download to my_download_path <- \"path_to_ERA5_download_folder\"  # Download the ERA5 data download_ERA5(my_token = my_token,               site_metadata = my_site_metadata,               mask = path_to_mask,               download_path = my_download_path)"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/articles/my-vignette.html","id":"step-2-data-processing","dir":"Articles","previous_headings":"Workflow","what":"Step 2: Data Processing","title":"my-vignette","text":"downloading ERA5 .nc files, convert CSV files formatted match AmeriFlux standards, enabling easy merging existing datasets. conversion handled netcdf_df_formatter(), adjusts ERA5 timestamps UTC local time (yyyyMMddHHmm) based site’s coordinates converts solar radiation (ssrd), air temperature (t2m), total precipitation (tp) AmeriFlux units. netcdf_to_csv() function calls netcdf_df_formatter() site folder, merging relevant data site year output CSV contains one site’s data one year. full_year == TRUE, function return full years begin first hour theyear end last. purposes example, set full_year == FALSE.","code":"# Point to a folder containing ERA5 .nc files site_folder <- system.file(\"extdata\", \"02_csv_conversion_ex\", package = \"ERA5Flux\")  # Specify a site name site_name <- \"US_GL2\"  # Create a temporary directory to export our output to output_filepath <- tempdir()  # Convert NetCDF data to a CSV file netcdf_to_csv(site_folder, output_filepath, site_name, full_year = FALSE) #> Saved: US_GL2_2024_2025_tp.csv  # Read the CSV back in data <- read.csv(list.files(output_filepath, pattern = \"US_GL2\", full.names = TRUE))  head(data) #>           time         tp #> 1 202412311900 0.40247058 #> 2 202412312000 0.03797992 #> 3 202412312100 0.07184656 #> 4 202412312200 0.10609820 #> 5 202412312300 0.12701539 #> 6 202501010000 0.15275138"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/articles/my-vignette.html","id":"step-3-merging-and-blending-ameriflux-with-era5-data","dir":"Articles","previous_headings":"Workflow","what":"Step 3: Merging and Blending AmeriFlux with ERA5 Data","title":"my-vignette","text":"processed ERA5, can merge ERA5 AmeriFlux together. merging, can blend together. Maybe helpful explain difference merging blending ? Final result look like : Maybe explain researchers can use results work.","code":"# Show how to use this # merge_ERA5_FLUX() # Show how to use this # blend_ERA5_Flux()"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Angel Chen. Author, maintainer.           angelchen7.github.io Sam Jurado. Author. David E Reed. Author. Ammara Talib. Author. Junna Wang. Author. Boya Zhang. Author. Sparkle L Malone. Author.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chen , Jurado S, Reed D, Talib , Wang J, Zhang B, Malone S (2025). ERA5Flux: Improve Utility ERA5 Data Flux Site Locations. R package version 0.0.0.9000, https://github.com/Malone-Disturbance-Ecology-Lab/ERA5Flux.","code":"@Manual{,   title = {ERA5Flux: Improve the Utility of ERA5 Data at Flux Site Locations},   author = {Angel Chen and Sam Jurado and David E Reed and Ammara Talib and Junna Wang and Boya Zhang and Sparkle L Malone},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/Malone-Disturbance-Ecology-Lab/ERA5Flux}, }"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/index.html","id":"era5flux","dir":"","previous_headings":"","what":"Improve the Utility of ERA5 Data at Flux Site Locations","title":"Improve the Utility of ERA5 Data at Flux Site Locations","text":"primary objective repo improve utility ERA5 data flux site locations. Scripts organized following groups","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/index.html","id":"id_1-create-dfsitemetadata-file-00_sitemetadata","dir":"","previous_headings":"","what":"1. create df.sitemetadata file 00_sitemetadata","title":"Improve the Utility of ERA5 Data at Flux Site Locations","text":"df contains site meta data (site code, lat, lon, start date, end data, variables needed)","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/index.html","id":"id_2-pre-download-for-files-_01","dir":"","previous_headings":"","what":"2. pre-Download for Files _01","title":"Improve the Utility of ERA5 Data at Flux Site Locations","text":"day_padding (add 1 day start end dates future time zone offset issues) utc_offset (add UTC offset df.sitemetadata) get_land_proportion (pull land-sea_mask one day) 01_ERA5_API (use ecmwfr package df.sitemetadata)","code":""},{"path":[]},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/index.html","id":"id_3-data-processing-for-era5-_02","dir":"","previous_headings":"","what":"3. Data Processing for ERA5 _02","title":"Improve the Utility of ERA5 Data at Flux Site Locations","text":"02_csv_conversion: Takes directory argument reformats ERA4 .nc data csv format following characteristics. Input: (character) file path folder containing netcdf files one site. Datetime stamp column named “time”. UTC timezones convetered local time. Time column formatted yyyyMMddHHmm Variables names ERA5 dataset maintained ERA5 units converted Ameriflux units: Solar radiation (ssrd) Jm-2 Wm-2. Air Temperature (t2m) Kelvin celsius. Total precipitation (tp) meters millimeters. Input: (character) file path folder containing netcdf files one site. .csv file located within site_folder file name format: siteID_startYear_endYear_variableName.csv example, US-Ho1_2001_2020_tp_t2m.csv SiteID deetermined lat lon coordinates df.sitemetadata. csv file starts first hour year (e.g., 2000-01-01 00:00) ends last hour year (e.g., 2020-12-31 23:00).","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/index.html","id":"id_4-flux-data-merging_03","dir":"","previous_headings":"","what":"4. Flux Data Merging_03","title":"Improve the Utility of ERA5 Data at Flux Site Locations","text":"03_01_merge_ERA5_FLUX: interpolation ERA5 data ensure ERA5 FLUX datasets share timestamp. 03_02_blend_ERA5_FLUX: blend ERA5 FLUX datasets according blending rules. input variables (character): filename_FLUX, filename_ERA5 input variables (vector character): varname_FLUX, varname_ERA5 input variables (vector character): blending_rules output variables: dataframe original ERA5 FLUX data gap-filled data varname varname_FLUX varname_ERA5 length. names row matched. blending_rules length varname_FLUX varname_ERA5. users give rules variable. options blending_rules: “replace”, “lm”, “lm_no_intercept”, “automatic” *scripts provided python R.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/index.html","id":"function-documentation","dir":"","previous_headings":"","what":"Function Documentation","title":"Improve the Utility of ERA5 Data at Flux Site Locations","text":"Step 0: Enter developer mode running library(devtools) devtools::load_all() make functions available developing. Step 1: Click anywhere inside function.  Step 2: Go Code -> Insert Roxygen Skeleton. populate script template roxygen comments.  Step 3: Fill template roxygen comments. can learn write comments . can view function documentation CarbonExchangeParameters example. put anything “@export”.  Notes: sample data like use function examples, can put inst/extdata/. can reference sample data something like system.file(\"extdata\", \"-file.nc\", package = \"ERA5Flux\"). functions export file, need make sure function argument lets user specify like export file output. function example, can just make example export temporary folder tempdir(). CRAN allow functions export something without letting user decide goes. See netcdf_to_csv() example. Step 4: Make sure updated function script “R” folder. Now render documentation actual help page function using devtools::document(). generate .Rd file inside “man” folder. becomes function’s help page can now access typing ?-function-name. Step 5: Always remember push commits GitHub!","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Improve the Utility of ERA5 Data at Flux Site Locations","text":"can install development version ERA5Flux GitHub :","code":"# install.packages(\"pak\") pak::pak(\"Malone-Disturbance-Ecology-Lab/ERA5Flux\")"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/blend_ERA5_Flux.html","id":null,"dir":"Reference","previous_headings":"","what":"Blend ERA5 and AmeriFlux Data — blend_ERA5_Flux","title":"Blend ERA5 and AmeriFlux Data — blend_ERA5_Flux","text":"function used blend data AmeriFlux data ERA5, ensuring start end timestamps. Please first make sure run merge function (merge_ERA5_FLUX()) first, output merge function used input blending function.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/blend_ERA5_Flux.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blend ERA5 and AmeriFlux Data — blend_ERA5_Flux","text":"","code":"blend_ERA5_Flux(   merged_data = NULL,   varname_FLUX = NULL,   varname_ERA5 = NULL,   blending_rule = NULL )"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/blend_ERA5_Flux.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blend ERA5 and AmeriFlux Data — blend_ERA5_Flux","text":"merged_data (data.frame) data frame datetime stamp column named \"time\" format: \"%Y-%m-%d %H:%M:%S\". time step \"time\" column AmeriFlux file. also includes columns AmeriFlux ERA5 data merged together. varname_FLUX (character) vector variable names AmeriFlux BASE data blended ERA5 data. varname_ERA5 (character) vector variable names ERA5 data blended AmeriFlux BASE data. blending_rule (character) four types blending rules can used blend AmeriFlux ERA5 variables: \"lm\": Linear regression slope. Fits linear model slope, FLUX ~ ERA5, fills missing values FLUX predicted values ERA5. \"lm_no_intercept\": Linear regression without slope. Fits linear model without slope, FLUX ~ ERA5, fills missing values FLUX predicted values ERA5. \"replace\": Replace Ameriflux variable ERA5 variable. \"automatic\": Checks non-missing FLUX values. ≥50% present uses \"lm\" approach. <50% present fallback \"replace\".","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/blend_ERA5_Flux.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blend ERA5 and AmeriFlux Data — blend_ERA5_Flux","text":"(data.frame) data frame following characteristics: Time step \"time\" column AmeriFlux file. also includes columns varname_FLUX, columns varname_ERA5. Variable column blending rule applied . Name blended column similar AmeriFlux column name addition \"_f\".","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/blend_ERA5_Flux.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Blend ERA5 and AmeriFlux Data — blend_ERA5_Flux","text":"Please note length varname_FLUX must length varname_ERA5; location, varname_FLUX varname_ERA5 refer variable despite fact AmeriFlux ERA5 may use different names variable. example, incoming shortwave radiation, ERA5 uses \"ssrd\", AmeriFlux uses \"SW_IN\".","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/blend_ERA5_Flux.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Blend ERA5 and AmeriFlux Data — blend_ERA5_Flux","text":"Ammara Talib Junna Wang","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/blend_ERA5_Flux.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blend ERA5 and AmeriFlux Data — blend_ERA5_Flux","text":"","code":"# First example # Point to AmeriFlux data filename_FLUX <- system.file(\"extdata\", \"AMF_BR-Sa1_BASE-BADM_5-5.zip\", package = \"ERA5Flux\") # Point to ERA5 data filename_ERA5 <- system.file(\"extdata\", \"BR-Sa1_tp_2002_2011.csv\", package = \"ERA5Flux\") # List AmeriFlux variable(s) to be merged with ERA5 varname_FLUX <- c(\"P\") # List ERA5 variable(s) to be merged with AmeriFlux varname_ERA5 <- c(\"tp\") # Run the merge function first, because its output will be used as input for this blending function # Merge AmeriFlux and ERA5 data together merged_data <- merge_ERA5_FLUX(filename_FLUX, filename_ERA5, varname_FLUX, varname_ERA5) # Specify the blending rule(s) blending_rule <- c('lm_no_intercept') # Blend AmeriFlux and ERA5 data together merg_blend <- blend_ERA5_Flux(merged_data, varname_FLUX, varname_ERA5, blending_rule) #> Processing: P using rule: lm_no_intercept head(merg_blend) #>                  time        tp  P P_f #> 1 2002-01-01 00:00:00 0.2252227 NA  NA #> 2 2002-01-01 01:00:00 0.4244113 NA  NA #> 3 2002-01-01 02:00:00 0.3902548 NA  NA #> 4 2002-01-01 03:00:00 0.6315456 NA  NA #> 5 2002-01-01 04:00:00 0.2987110 NA  NA #> 6 2002-01-01 05:00:00 0.3121161 NA  NA  # Second example # Point to AmeriFlux data filename_FLUX <- system.file(\"extdata\", \"AMF_US-EvM_BASE-BADM_2-5.zip\", package = \"ERA5Flux\") # Point to ERA5 data filename_ERA5 <- system.file(\"extdata\", \"US-EvM_ERA_2020_2023_hr.csv\", package = \"ERA5Flux\") # List AmeriFlux variable(s) to be merged with ERA5 varname_FLUX <- c('SW_IN', 'TA') # List ERA5 variable(s) to be merged with AmeriFlux varname_ERA5 <- c('ssrd', 't2m') # Merge AmeriFlux and ERA5 data together merged_data <- merge_ERA5_FLUX(filename_FLUX, filename_ERA5, varname_FLUX, varname_ERA5) # Specify the blending rule(s) blending_rule <- c('replace', 'automatic') # Blend AmeriFlux and ERA5 data together merg_blend <- blend_ERA5_Flux(merged_data, varname_FLUX, varname_ERA5, blending_rule) #> Processing: SW_IN using rule: replace #> Processing: TA using rule: automatic #> Fitting linear model with formula: TA ~ t2m head(merg_blend) #>                  time ssrd      t2m SW_IN TA SW_IN_f     TA_f #> 1 2020-01-01 00:00:00    0 22.04965    NA NA       0 21.24062 #> 2 2020-01-01 00:30:00    0 21.83630    NA NA       0 20.95910 #> 3 2020-01-01 01:00:00    0 21.62295    NA NA       0 20.67757 #> 4 2020-01-01 01:30:00    0 21.40405    NA NA       0 20.38873 #> 5 2020-01-01 02:00:00    0 21.18514    NA NA       0 20.09988 #> 6 2020-01-01 02:30:00    0 20.99367    NA NA       0 19.84723"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/check_DST.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Daylight Saving Time — check_DST","title":"Check Daylight Saving Time — check_DST","text":"function check given time point Daylight Saving Time (DST). , adjust time standard (non-DST) time.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/check_DST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Daylight Saving Time — check_DST","text":"","code":"check_DST(lat = NULL, lon = NULL, timepoint = NULL)"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/check_DST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Daylight Saving Time — check_DST","text":"lat (numeric) Latitude coordinate decimal degrees. lon (numeric) Longitude coordinate decimal degrees. timepoint (character) Time point either %Y-%m-%d HH:MM:SS %Y/%m/%d HH:MM:SS format.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/check_DST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Daylight Saving Time — check_DST","text":"(list) list containing boolean representing DST status standard time DST effect.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/check_DST.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Daylight Saving Time — check_DST","text":"","code":"# This will get the current time timepoint <- lubridate::now() # Check whether the time is in DST at latitude 25.4, longitude -80.5 and get the standard time if so is_DST <- check_DST(lat = 25.4, lon = -80.5, timepoint) is_DST #> $is_DST #> [1] TRUE #>  #> $standard_time #> [1] \"2025-10-01 16:19:34 EDT\" #>"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/date_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Date Conversion — date_conversion","title":"Date Conversion — date_conversion","text":"function produce converted time, either UTC -> local, local -> UTC.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/date_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date Conversion — date_conversion","text":"","code":"date_conversion(lat = NULL, lon = NULL, time = NULL, flag = NULL)"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/date_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date Conversion — date_conversion","text":"lat (numeric) Latitude coordinate decimal degrees. lon (numeric) Longitude coordinate decimal degrees. time (character) Time %Y-%m-%d %H:%M:%S format. flag (numeric) Set flag 0 local UTC, set flag 1 UTC local.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/date_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date Conversion — date_conversion","text":"POSIXct object.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/date_conversion.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Date Conversion — date_conversion","text":"TAKES ACCOUNT Daylight Saving Time!!","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/date_conversion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Date Conversion — date_conversion","text":"Boya (\"Paul\") Zhang","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/date_conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Date Conversion — date_conversion","text":"","code":"# Convert local to UTC utc_result_winter <- date_conversion(25.2, -80.4, \"2018-01-16 22:02:37\", 0) #> [1] \"America/New_York\" utc_result_winter #> [1] \"2018-01-16 22:02:37 UTC\"  # Convert UTC to local local_result <- date_conversion(25.2, -80.4, \"2018-01-16 22:02:37\", 1) #> [1] \"America/New_York\" local_result #> [1] \"2018-01-16 17:02:37 EST\""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/day_padding.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad Dates by 1 Day — day_padding","title":"Pad Dates by 1 Day — day_padding","text":"function designed pad 1 day beginning ending days. add 1 day start end dates future time zone offset issues.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/day_padding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad Dates by 1 Day — day_padding","text":"","code":"day_padding(start_day = NULL, end_day = NULL)"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/day_padding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad Dates by 1 Day — day_padding","text":"start_day (character) Start date either %Y-%m-%d %Y/%m/%d format. end_day (character) End date either %Y-%m-%d %Y/%m/%d format.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/day_padding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad Dates by 1 Day — day_padding","text":"(character) New start end dates either %Y-%m-%d %Y/%m/%d format, padded 1 day .","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/day_padding.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pad Dates by 1 Day — day_padding","text":"Boya (\"Paul\") Zhang","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/day_padding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pad Dates by 1 Day — day_padding","text":"","code":"# Pad starting and ending dates by 1 day result <- day_padding(\"2024-01-01\", \"2025-12-31\") result #> $start_day #> [1] \"2023-12-31\" #>  #> $end_day #> [1] \"2026-01-01\" #>"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/download_ERA5.html","id":null,"dir":"Reference","previous_headings":"","what":"Download ERA5 Data — download_ERA5","title":"Download ERA5 Data — download_ERA5","text":"function uses ecmwfr package download ERA5 data site specified AmeriFlux site metadata dataframe. temporal geographical coverage downloaded data match AmeriFlux site metadata dataframe.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/download_ERA5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download ERA5 Data — download_ERA5","text":"","code":"download_ERA5(   my_token = NULL,   site_metadata = NULL,   mask = NULL,   download_path = NULL )"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/download_ERA5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download ERA5 Data — download_ERA5","text":"my_token (character) secret ECMWF token. site_metadata (data.frame) data frame AmeriFlux site metadata. Create metadata get_site_metadata(). mask (character) File path ERA5 land-sea mask. Get mask get_land_sea_mask(). download_path (character) Path folder ERA5 data get downloaded .","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/download_ERA5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download ERA5 Data — download_ERA5","text":"(character) Paths downloaded files.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/download_ERA5.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Download ERA5 Data — download_ERA5","text":"done already, may need accept data license agreement first can download data. Visit Copernicus Climate Data Store User Profile page https://cds.climate.copernicus.eu/profile accept appropriate license(s).","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/download_ERA5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download ERA5 Data — download_ERA5","text":"David Reed","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/download_ERA5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download ERA5 Data — download_ERA5","text":"","code":"if (FALSE) { # \\dontrun{ # Specify your variables my_variables <- c(\"2m_temperature\", \"total_precipitation\", \"surface_solar_radiation_downwards\") # Create the AmeriFlux site metadata site_metadata <- get_site_metadata(folder = \"path_to_data_folder\",                                    selected_variables = my_variables)  # Download the corresponding ERA5 data download_ERA5(my_token = \"my_ECMWF_token\",               site_metadata = site_metadata,               mask = \"path_to_ERA5_land_sea_mask\",               download_path = \"path_to_ERA5_download_folder\") } # }"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_proportion.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Land Proportion — get_land_proportion","title":"Get Land Proportion — get_land_proportion","text":"function designed return land proportion given latitude longitude.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_proportion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Land Proportion — get_land_proportion","text":"","code":"get_land_proportion(nc_file = NULL, lat = NULL, lon = NULL)"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_proportion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Land Proportion — get_land_proportion","text":"nc_file (character) File path .nc file. lat (numeric) Latitude coordinate decimal degrees. lon (numeric) Longitude coordinate decimal degrees.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_proportion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Land Proportion — get_land_proportion","text":"(data.frame) data frame containing land proportion.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_proportion.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get Land Proportion — get_land_proportion","text":"cycles ECMWF Integrated Forecasting System (IFS) CY41R1 (introduced May 2015) onwards, grid boxes parameter value 0.5 can comprised mixture land inland water ocean. Grid boxes value 0.5 can comprised water surface. latter case, lake cover used determine much water surface ocean inland water. cycles IFS CY41R1, grid boxes parameter value 0.5 can comprised land grid boxes value 0.5 can comprised ocean. older model cycles, differentiation ocean inland water.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_proportion.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Land Proportion — get_land_proportion","text":"Boya (\"Paul\") Zhang","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_proportion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Land Proportion — get_land_proportion","text":"","code":"if (FALSE) { # \\dontrun{ land_proportion <- get_land_proportion(\"file_path_to_the_nc_file\", 25.2, -80.3) } # }"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_sea_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Land-Sea Mask from ERA5 — get_land_sea_mask","title":"Get Land-Sea Mask from ERA5 — get_land_sea_mask","text":"function downloads netCDF land-sea mask ERA5. mask needed order run download_ERA5(). mask can found online : https://confluence.ecmwf.int/pages/viewpage.action?pageId=140385202#ERA5Land:datadocumentation-parameterlistingParameterlistings.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_sea_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Land-Sea Mask from ERA5 — get_land_sea_mask","text":"","code":"get_land_sea_mask(   file_name = \"lsm_1279l4_0.1x0.1.grb_v4_unpack.nc\",   download_path = getwd() )"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_sea_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Land-Sea Mask from ERA5 — get_land_sea_mask","text":"file_name (character) Name land-sea mask. default name \"lsm_1279l4_0.1x0.1.grb_v4_unpack.nc\". download_path (character) Path existing folder land-sea mask get downloaded . default location current working directory.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_sea_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Land-Sea Mask from ERA5 — get_land_sea_mask","text":"Path downloaded land-sea mask (invisibly).","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_land_sea_mask.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Land-Sea Mask from ERA5 — get_land_sea_mask","text":"","code":"if (FALSE) { # \\dontrun{ get_land_sea_mask() } # }"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_site_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get AmeriFlux Site Metadata — get_site_metadata","title":"Get AmeriFlux Site Metadata — get_site_metadata","text":"function designed build AmeriFlux site metadata file. site metadata file consists site code, latitude, longitude, start date, end data, variables needed. downloading AmeriFlux data, select sites, download data \"requested_files_manifest\" file. extract files data folder. Variables need added user.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_site_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get AmeriFlux Site Metadata — get_site_metadata","text":"","code":"get_site_metadata(folder = NULL, selected_variables = NULL)"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_site_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get AmeriFlux Site Metadata — get_site_metadata","text":"folder (character) Path folder containing extracted AmeriFlux data \"requested_files_manifest\" file. selected_variables (character) vector variable names.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_site_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get AmeriFlux Site Metadata — get_site_metadata","text":"(data.frame) data frame containing site metadata.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_site_metadata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get AmeriFlux Site Metadata — get_site_metadata","text":"David Reed","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/get_site_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get AmeriFlux Site Metadata — get_site_metadata","text":"","code":"if (FALSE) { # \\dontrun{ # Specify your variables my_variables <- c(\"2m_temperature\", \"total_precipitation\", \"surface_solar_radiation_downwards\") # Create the AmeriFlux site metadata site_metadata <- get_site_metadata(folder = \"path_to_data_folder\",                                    selected_variables = my_variables) } # }"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/merge_ERA5_FLUX.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge ERA5 and AmeriFlux Data — merge_ERA5_FLUX","title":"Merge ERA5 and AmeriFlux Data — merge_ERA5_FLUX","text":"function used merge data AmeriFlux data ERA5, ensuring start end timestamps.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/merge_ERA5_FLUX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge ERA5 and AmeriFlux Data — merge_ERA5_FLUX","text":"","code":"merge_ERA5_FLUX(   filename_FLUX = NULL,   filename_ERA5 = NULL,   varname_FLUX = NULL,   varname_ERA5 = NULL )"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/merge_ERA5_FLUX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge ERA5 and AmeriFlux Data — merge_ERA5_FLUX","text":"filename_FLUX (character) file path AmeriFlux BASE data downloaded https://ameriflux.lbl.gov/. filename_ERA5 (character) file path CSV file meterological data downloaded ERA5 https://cds.climate.copernicus.eu/datasets/reanalysis-era5-single-levels?tab=overview. Please note original ERA5 files .nc format. may want convert files CSV format using function netcdf_to_csv(). varname_FLUX (character) vector variable names AmeriFlux BASE data merged ERA5 data. varname_ERA5 (character) vector variable names ERA5 data merged AmeriFlux BASE data.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/merge_ERA5_FLUX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge ERA5 and AmeriFlux Data — merge_ERA5_FLUX","text":"(data.frame) data frame following characteristics: Datetime stamp column named \"time\" format: \"%Y-%m-%d %H:%M:%S\". Time step \"time\" column AmeriFlux file. also includes columns varname_FLUX, columns varname_ERA5.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/merge_ERA5_FLUX.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Merge ERA5 and AmeriFlux Data — merge_ERA5_FLUX","text":"Please note length varname_FLUX must length varname_ERA5; location, varname_FLUX varname_ERA5 refer variable despite fact AmeriFlux ERA5 may use different names variable. example, incoming shortwave radiation, ERA5 uses \"ssrd\", AmeriFlux uses \"SW_IN\".","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/merge_ERA5_FLUX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Merge ERA5 and AmeriFlux Data — merge_ERA5_FLUX","text":"Ammara Talib Junna Wang","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/merge_ERA5_FLUX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge ERA5 and AmeriFlux Data — merge_ERA5_FLUX","text":"","code":"# First example # Point to AmeriFlux data filename_FLUX <- system.file(\"extdata\", \"AMF_BR-Sa1_BASE-BADM_5-5.zip\", package = \"ERA5Flux\") # Point to ERA5 data filename_ERA5 <- system.file(\"extdata\", \"BR-Sa1_tp_2002_2011.csv\", package = \"ERA5Flux\") # List AmeriFlux variable(s) to be merged with ERA5 varname_FLUX <- c(\"P\") # List ERA5 variable(s) to be merged with AmeriFlux varname_ERA5 <- c(\"tp\") # Merge AmeriFlux and ERA5 data together merged_data <- merge_ERA5_FLUX(filename_FLUX, filename_ERA5, varname_FLUX, varname_ERA5) head(merged_data) #>                  time        tp  P #> 1 2002-01-01 00:00:00 0.2252227 NA #> 2 2002-01-01 01:00:00 0.4244113 NA #> 3 2002-01-01 02:00:00 0.3902548 NA #> 4 2002-01-01 03:00:00 0.6315456 NA #> 5 2002-01-01 04:00:00 0.2987110 NA #> 6 2002-01-01 05:00:00 0.3121161 NA  # Second example # Point to AmeriFlux data filename_FLUX <- system.file(\"extdata\", \"AMF_US-EvM_BASE-BADM_2-5.zip\", package = \"ERA5Flux\") # Point to ERA5 data filename_ERA5 <- system.file(\"extdata\", \"US-EvM_ERA_2020_2023_hr.csv\", package = \"ERA5Flux\") # List AmeriFlux variable(s) to be merged with ERA5 varname_FLUX <- c('SW_IN', 'TA') # List ERA5 variable(s) to be merged with AmeriFlux varname_ERA5 <- c('ssrd', 't2m') # Merge AmeriFlux and ERA5 data together merged_data <- merge_ERA5_FLUX(filename_FLUX, filename_ERA5, varname_FLUX, varname_ERA5) head(merged_data) #>                  time ssrd      t2m SW_IN TA #> 1 2020-01-01 00:00:00    0 22.04965    NA NA #> 2 2020-01-01 00:30:00    0 21.83630    NA NA #> 3 2020-01-01 01:00:00    0 21.62295    NA NA #> 4 2020-01-01 01:30:00    0 21.40405    NA NA #> 5 2020-01-01 02:00:00    0 21.18514    NA NA #> 6 2020-01-01 02:30:00    0 20.99367    NA NA"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_df_formatter.html","id":null,"dir":"Reference","previous_headings":"","what":"NetCDF Reformatter — netcdf_df_formatter","title":"NetCDF Reformatter — netcdf_df_formatter","text":"Reformats ERA5 .nc data data frame.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_df_formatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NetCDF Reformatter — netcdf_df_formatter","text":"","code":"netcdf_df_formatter(nc_file_path = NULL)"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_df_formatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NetCDF Reformatter — netcdf_df_formatter","text":"nc_file_path (character) File path ERA5 NetCDF file.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_df_formatter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NetCDF Reformatter — netcdf_df_formatter","text":"(data.frame) Data frame following characteristics: Datetime stamp column named \"time\". UTC timezones converted local time. SiteID determined lat lon coordinates df.sitemetadata. Time column formatted yyyyMMddHHmm, time zone determined using coordinates. Variables names ERA5 dataset maintained. ERA5 units converted Ameriflux units: Solar radiation (ssrd) Jm-2 Wm-2. Air Temperature (t2m) Kelvin Celsius. Total precipitation (tp) meters millimeters.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_df_formatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NetCDF Reformatter — netcdf_df_formatter","text":"","code":"# Point to a NetCDF file nc_file_path <- system.file(\"extdata\", \"ERA5-US-GL2-2025-1.nc\", package = \"ERA5Flux\") # Reformat the NetCDF result <- netcdf_df_formatter(nc_file_path) head(result) #>           time         tp #> 1 202412311900 0.40247058 #> 2 202412312000 0.03797992 #> 3 202412312100 0.07184656 #> 4 202412312200 0.10609820 #> 5 202412312300 0.12701539 #> 6 202501010000 0.15275138"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Export NetCDF to CSV — netcdf_to_csv","title":"Export NetCDF to CSV — netcdf_to_csv","text":"Takes directory ERA5 .nc data argument exports data CSV format. function grabs NetCDF file runs netcdf_df_formatter() . builds list variables across data frames folder joins data time, filtering return full years data.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export NetCDF to CSV — netcdf_to_csv","text":"","code":"netcdf_to_csv(   site_folder = NULL,   output_filepath = NULL,   site_name = NULL,   full_year = FALSE )"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export NetCDF to CSV — netcdf_to_csv","text":"site_folder (character) folder one site NetCDF data. NetCDF files can different variables different years long one site. output_filepath (character) File path output CSV written. site_name (character) Name site concatenated onto CSV file name (e.g. US_GL2). full_year (bool) Filter include complete years, data star first hour year ends last hour year. Otherwise, return data .","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export NetCDF to CSV — netcdf_to_csv","text":".csv file NetCDF data within site folder. .csv file file name format: siteID_startYear_endYear_variableName.csv. example, US-Ho1_2001_2020_tp_t2m.csv. SiteID determined lat lon coordinates df.sitemetadata. CSV file starts first hour year (e.g., 2000-01-01 00:00) ends last hour year (e.g., 2020-12-31 23:00) full_year == TRUE.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/netcdf_to_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export NetCDF to CSV — netcdf_to_csv","text":"","code":"# Point to a folder containing ERA5 .nc files site_folder <- system.file(\"extdata\", \"02_csv_conversion_ex\", package = \"ERA5Flux\") # Specify a site name site_name <- \"US_GL2\" # Create a temporary directory to export our output to output_filepath <- tempdir()  # Convert NetCDF data to a CSV file netcdf_to_csv(site_folder, output_filepath, site_name, full_year = FALSE) #> Saved: US_GL2_2024_2025_tp.csv   # Read the CSV back in data <- read.csv(list.files(output_filepath, pattern = \"US_GL2\", full.names = TRUE)) head(data) #>           time         tp #> 1 202412311900 0.40247058 #> 2 202412312000 0.03797992 #> 3 202412312100 0.07184656 #> 4 202412312200 0.10609820 #> 5 202412312300 0.12701539 #> 6 202501010000 0.15275138"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/utc_offset.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinated Universal Time (UTC) Offset — utc_offset","title":"Coordinated Universal Time (UTC) Offset — utc_offset","text":"Offset difference UTC local time without considering Daylight Saving Time. function produce hour offset number converting local UTC.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/utc_offset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinated Universal Time (UTC) Offset — utc_offset","text":"","code":"utc_offset(lat = NULL, lon = NULL)"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/utc_offset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinated Universal Time (UTC) Offset — utc_offset","text":"lat (numeric) Latitude coordinate decimal degrees. lon (numeric) Longitude coordinate decimal degrees.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/utc_offset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinated Universal Time (UTC) Offset — utc_offset","text":"(numeric) UTC offset.","code":""},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/reference/utc_offset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinated Universal Time (UTC) Offset — utc_offset","text":"","code":"# Get the UTC offset at latitude 25.4, longitude -80.5 offset <- utc_offset(lat = 25.4, lon = -80.5) #> [1] -5"},{"path":"https://malone-disturbance-ecology-lab.github.io/ERA5Flux/news/index.html","id":"era5flux-0009000","dir":"Changelog","previous_headings":"","what":"ERA5Flux 0.0.0.9000","title":"ERA5Flux 0.0.0.9000","text":"package currently development.","code":""}]
